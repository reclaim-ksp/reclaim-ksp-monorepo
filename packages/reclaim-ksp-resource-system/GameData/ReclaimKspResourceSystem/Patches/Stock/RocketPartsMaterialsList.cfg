// Author: yoyotam3

// Sandcastle is set up to only require Ore out of the box to print parts and vessels, but if you look deep enough, you'll find a rich system.
// How rich?
// Imagine that you want to set up a production chain to produce a Buffalo Habitat Module.
// That module needs a bed.
// To make a bed, you need canvas and foam.
// To make foam, you need chemicals and electricity.
// To make canvas you need threading and a specialized "printer" called a Knitting Machine.
// Only a Knitting Machine can make canvas.
// All of the above can be required components and/or required resources in order to create the bed.
// Once you have made the bed, you can print the habitat module- unless you have other components that you need, like monitors, chairs, and tables.

// A materials list specifies what resources it takes to produce a new part. 
// This doesn't take into account the resources needed to run the print shop itself.
MATERIALS_LIST
{
	// Name of the materials list. This should correspond to the part categories:
	// Aero, Cargo, Communication, Control, Coupling, Electrical, Engine, FuelTank, Ground, none, Payload, Pods, Robotics, Science, Structural, Thermal, Utility
	// The default category is named Default. The default category is used if there is no MATERIALS_LIST provided for the part's category.
	// NOTE: The category called "none" shows up in the GUI as "Special"
	name = Default

	// You can specify one or more RESOURCE nodes for the materials list.
	// By default, Sandcastle uses Ore as its resource requirement, but you can specify one or more different resources if desired.
	// NOTE: If you specify more than one RESOURCE, the sum of each resource's rate must be equal to or greater than 1.
	// If that's not the case then Sandbox will add Ore as a resource until the sum of each resource's rate equals 1.
	RESOURCE
	{
		// Name of the required resource.
		name = RocketParts

		// The multiplier to use when calculating how much of the resource is required to print the part.
		// The exact amount of resource needed depends upon the part mass, the resource density, and the multiplier.
		// The equation is: amountRequired = (partMass / resourceDensity) * rate
		// The multiplier cannot be less than 1. A value greater than 1 represents the resource that's wasted during construction.
		// Since Ore is a generic resource, it has a bunch of useless bits in it, so it generates more waste.
		rate = 1
	}
}
PARTS_BLACKLIST
{
	// Specify one or more blacklistedPart entries
	blacklistedPart = boxOfGenericSpecializedParts
}