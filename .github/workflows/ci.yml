name: CI

on:
  push:
    branches:
      - main

jobs:
  release-assets:
    name: Creating mod release assets
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    concurrency: ${{ github.workflow }}-${{ github.ref }}
    outputs:
      hasChangesets: ${{ steps.changesets.outputs.hasChangesets }}
      published: ${{ steps.changesets.outputs.published }}
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
      pullRequestNumber: ${{ steps.changesets.outputs.pullRequestNumber }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare
        uses: ./.github/actions/prepare
        with:
          node-version: 20

      - name: Creating mod release assets
        id: changesets
        uses: changesets/action@v1
        with:
          # The pull request title.
          title: 'Changesets Release'
          # The command to update version, edit CHANGELOG, read and delete changesets.
          version: 'npx changeset version'
          # The commit message to use.
          commit: 'chore(changesets): consumed changesets'
          # The command to use to build and publish packages
          publish: 'npx changeset publish'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Debug
        shell: bash
        run: echo "changesets outputs ${{ toJson(steps.changesets.outputs) }}"

      - name: Publish
        if: steps.changesets.outputs.hasChangesets == 'false'
        shell: bash
        run: echo "changesets outputs ${{ toJson(steps.changesets.outputs) }}"

  dispatch:
    # https://github.com/peter-evans/repository-dispatch
    name: Published? ${{ needs.release-assets.outputs.published }} - if true, notify target repositories via `repository_dispatch`
    runs-on: ubuntu-latest
    needs: [release-assets]
    strategy:
      matrix:
        repo: ['reclaim-ksp/reclaim-ksp-ckan-meta']
    steps:
      - name: Repository dispatch for `Reclaim KSP - CKAN meta`
        if: needs.release-assets.outputs.published == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PAT }}
          repository: ${{ matrix.repo }}
          event-type: event-release-assets
          # client-payload: |-
          #   {
          #     "repo": {
          #       "name": "${{ github.repository }}",
          #     }
          #   }
